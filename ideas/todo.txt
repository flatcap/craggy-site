find delimiters "," anything else? CR, LF

look for keywords "clean", "success", "failed"

notes in "", or ''

after decoding, any ambiguities need to be left for the climber to add info
eg, 66 bl (Blue or Black)
too difficult to resolve, did they mean 65 Blue or 67 Black
on climb matcher add fuzzy tickbox which brackets panel selection +/-1

after extra editing, hit search again to fill in details

verify button - errors tagged with red bg

need management console: add/del panel/setter/colour/...
colours need abbr list

climb list: climb id, date, notes
current flag? (indexed)
altering routes *CAN* invalidate the climbs	=> option -> rss update
tickboxes for clean (enough), downclimb, no feet, etc

tickbox fuzzy grade +/- 2 options, panel +/- 2 nums
tickbox all matches
tickbox nice climb
tickbox search csv output
tickbox cumulative output (combine with tickbox set on results)
(sort and uniq the results)
tickbox search results only
search by _age_ days 3,4-8,-30,30-
search by date: start, end (and/or)

traverse stats (/m^2)
square meterage
bouldering meterage

add/remove colour/setter/?
actually remove? just mark inactive? (for historic routes)

--------------------------------------------------------------------------------

climb notes:
    Left arete allowed
    Right arete allowed
    Aretes allowed
    Hands allowed on features
    Feet allowed on features
    Hands and feet allowed on features
    Hands allowed on discs
    Feet allowed on discs
    Hands and feet allowed on features
    No chimney
    Chimney allowed
    Competition route

Work list:
    Abbr    Name       Pri Tots SQL1                SQL2
    T       Todo        H   27  success <> clean    grade < 6c
    D       Downclimb   M   20  downclimb = 0       grade < 6a
    6       6 Months    M   0   age > 6             grade < 6c
    4       4 Months    L   4   age > 4, age < 6    grade < 6c
    2       2 Months    VL  25  age > 2, age < 4    grade < 6c
    C       Coverage T  L   3   success = ""        grade < 7a
    C       Coverage C  L   5   success <> clean    grade < 7a
    C       Coverage D  L   12  downclimb = 0       grade < 6b

check edits of parse/get_id
coalesce google/import
colour parsing based on abbrev (explode abbrev, search)
tidy db cols, more name,id fewer reserved names
stats functions -> array, then print
generic parse function (x, table, match_field, out_field)

--------------------------------------------------------------------------------

check text output is all \r\n

process_date => 2009-12-15 -> 15 Dec 09
date_tidy
date_add_month
date_add_days

refactor seldom to a array of arrays

is everyone using the array form of db_select?

sort out titles and headings on all the html pages

--------------------------------------------------------------------------------

combine & sort by panel,grade,colour
merge duplicates - keep highest priority
tag the priorities like the 6a sheets - High = visible, Low = Faint
print

options --high only high priority
	--medium medium and high priority


two craggy database users:
	craggy_ro	= read only for general use
	craggy		= read/write for updates
	backup		= read only

remove privileges from craggy:
	drop table
	create table
	delete data rows?

-----------------------

two pane dialog for climb/route add

pane1 typing area
pane2 matches ajax as you type

crontab backup of russon.org/sql
use rdiff-backup

symlink conf.php from somewhere else?
../conf (excluded from git)
admin.conf
rich.conf
craggy.conf

nice -> star

to update routes
	correction	overwrite row
	deletion	set date clear
			set climbs as old
	new		add route

add/del route
add/del climb

addclimb
	abbr -> colour id
	panel -> route id, col id
	routes -> route ids
	decode success
	decode comments
	add to climbs

add/del climbs/routes need to work from command line, too

start collecting climbs stats - crontab

custom craggy 404 /redirect

route/climb abbr decoder

date on rss feed
table for rssdata = create_rss.php

fewest_climbs.php
a list of the routes I've climbed the least
low score in work.php - id = 'F'

data for climbing rate
climbs/week/month/year
total ascent
mean grade

rd,blu,gn, description for all
rd desc, blu, gn  description for red only

recalculate scores/stats at 4am

add/remove
	colour
	setter
	grade
	panel
	etc

rss of new climbs + stats

how do we determine the "best" climb?
	highest success value?

list all climbs (best available)
	put a "+" if multiple climbs exist
	+ expands the table to show all climbs of that route
best => best (highest numbered) success value
	latest date
	notes (singular)

move schema into craggy git

make reldir in utils.php a bit smarter
can I calculate it from $_SERVER?

keep a db undo buffer?

for new routes, queue the changes
	delete routes grid  [tick] remove from list button
	add routes grid - editable [tick] remove from list
	commit changes button -> update db; create rss!
	backup data first?

eliminate the views?
make them more useful?

use mod_rewrite to change:
	/rich/work.php
to one of:
	/user/1/work.php
	/user/work.php?id=1
	/work.php?id=1
or
	user/1/work.php calls /work.php?user=1
	user/rich/work.php calls /work.php?user=rich

check sort order on all pages

add debug logging option to db.php

add a left join clause to db_select()
array of
	table_name
	constraint1
	constraint2...

find out by what criteria I'm sorting the database tables and make sure they're indexed

test everything public with javascript disabled
especially default sort order

knobble password on admin dir (on localhost)

local bin dir

bash_history for craggy and work dir

link the styles table to a route search by that tag
ie  styles.php/arch links to routes.php?tags=arch

summary tag on tables

fix_justification - heuristic that looks for numbers
exceptions - height(m)
move to render?  what about exceptions

turn off analytics for home (on russon.org)

disable certain table sort columns
$output .= "	$('#{$id}').tablesorter( {sortList: {$sortlist}, headers: { 4: { sorter: false } } } ); ";
	$output .= "	$('#{$id}').tablesorter( {sortList: {$sortlist}, headers: { 4: { sorter: false } } } ); ";

	routes.php	4,6,8
	climbs.php	4,9
	downclimb.php	5
	seldom.php	5,6
	todo.php	5
	work.php	4:broken
	{
		sortlist: { [[0,0]] },
		headers: { 4: { sorter: false } }
	}

singularise filenames

create an ip-address checker
is this a rich or not?
	rich_ip check:

	192.168.2.0/24		- put this all in a conf file?
	127.0.0.0/8

	82.8.178.149	home.russon.org
	78.129.239.63	craggy.russon.org
	95.177.35.86	unknown.griffin.com

	control showing of:
		rich menu
		google analytics
		validation box

similar check: is_this_live_site()
	disable debugging, etc

change the css to avoid the 4 * &nbsp; in the table headers

flatten rich/* into main dir

global variables - make into OBJECTS (colour->id, colour->abbr)
	g_colour
	g_grade
	g_success
	g_difficulty
utils functions (if global var not set, query db)
	utils_get_colour
	etc

admin/rich-ness dependent on cookie session

integrate admin utils into normal pages
i.e. if 'rich', add "new route" button

rss should date back to first climbs set
include features only routes
as routes deleted, rss updated?
old rss deleted?
select date_set,count(date_set) from craggy_route group by date_set order by date_set;
34 rss entries

make the cursor look right when hovering over
table rows that are clickable and buttons that are disabled
cursor: pointer;

css menus?
how do they interact with search engines

use js to highlight current link in menubar

FORBID any caching on local host

use css, not &nbsp; to separate buttons!

don't display "First Name, Surname", just display "Name"

graph sutton grades

add check tables to cron

date_set / date_climbed NULL? if unknown

allow null setter => unknown
change empty setter => Features or Unknown?
alter table craggy_route change column setter_id setter_id int(11) null;

on db deletion
route
	grade_id = NULL		=> unknown grade
	setter_id = NULL	=> unknown setter
	panel_id		NOT NULL
	colour_id		NOT NULL
	notes = NULL		=> default rules apply
	climb_type_id		NOT NULL
climb
	climber_id		NOT NULL
	route_id		NOT_NULL
	success_id		NOT_NULL
	difficulty_id = NULL	=> not specified

climb_type -> climbtype?

search sql, any "order by" => *index*

russon.org as replications server - replicate hourly to craggy_russon table!
pull replications, cron/replication server

trigger for last updated on route table?
on insert/update adopt most recent date?

export climbs as csv for logged-in climbers
calculate *their* stats - mean grade / climb type

suggestions box

setter/climber - enter names in one box
	concat / split as necessary
	use '_' to force a join, van_de_Graaf (filter out '_')
	or "van de Graaf"

initials -> nickname?
	default to initials
	or optional

rate climbs - add comments - suggest grade

routes - start_date, end_date
end_date = midday, start_date = 12:01pm
validate climb against these dates?
on route end - what do we do to climbs?
	flag them?
	old climb table?

tags on climbs: reachy, crimpy, strenuous, etc

* x 5 hover over them to select difficulty - colour-coded
ratings display 5 outline stars, on hover colour them, then select one, others grey
ratings, easy, medium, hard, green, amber, red, VERY easy, VERY hard star + *!* in easy/hard colour
display difficulty as icon? - colour blind? E!,E,M,H,H! alt-text -> add to db table?

sql-logging, sync between home and live, stored procedures?, partitioning?

need view(s) encompassing
	craggy_route
	craggy_rating
	craggy_climber
	craggy_climb

set_error_handler("customError");

downloads menu item (drop down)
	Route data as pdf
	Route data as a text file
	Route data as a csv

myip has changed
alter utils to match
read values from config file?

cursor: text;
cursor: default;
cursor: pointer;

climb count on "add climbs"
include downclimbs

foreach source file list which database tables it requires
write a test rig to see if missing, or empty, tables cause problems

setter could also search for
rrusson and richr

fix dates so that dd/mm/yyyy and dd-mm-yyyy are accepted

add default option to columns for tables
prevent duplicate rows in delete routes table
eliminate tick_list from js
add climb_type back to add_climbs?
feedback on del_route

if table title field is missing take the name and uppercase the first letter
likewise the validator -- use the name -- no, we need to specify if there's a validator or not

